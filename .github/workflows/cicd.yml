name: Todolist CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
  pull_request:
    branches:
      - main

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.jas0n4ndrw }}
          password: ${{ secrets.jasondocker18 }}

      - name: Build & Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./.Backend
          push: true
          tags: |
            ${{ secrets. }}/todolist-backend:${{ github.sha }}
            ${{ secrets.jas0n4ndrw }}/todolist-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./.Frontend
          push: true
          tags: |
            ${{ secrets.jas0n4ndrw }}/todolist-frontend:${{ github.sha }}
            ${{ secrets.jas0n4ndrw }}/todolist-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  continuous-deployment:
    needs: continuous-integration
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Pull Latest Backend Image
        run: docker pull ${{ secrets.jas0n4ndrw }}/todolist-backend:latest

      - name: Pull Latest Frontend Image
        run: docker pull ${{ secrets.jas0n4ndrw }}/todolist-frontend:latest

      - name: Stop and Remove Old Containers
        run: |
          docker compose down || true
          docker system prune -f

      - name: Run New Containers
        run: |
          docker compose up -d
        env:
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          PORT: ${{ secrets.PORT }}